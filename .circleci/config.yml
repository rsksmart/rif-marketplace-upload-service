version: 2.1

commands:
  install-deps:
    steps:
      - run:
          name: "Install deps"
          command: npm ci

  install-ipfs:
    steps:
      - run:
          name: "Install IPFS"
          command: |
            wget https://dist.ipfs.io/go-ipfs/v0.7.0/go-ipfs_v0.7.0_linux-amd64.tar.gz
            tar -xvzf go-ipfs_v0.7.0_linux-amd64.tar.gz
            cd go-ipfs && sudo bash install.sh
            ipfs --version


  install-sqlite:
    steps:
      - run:
          name: "Install SQLite"
          command: npm install sqlite3

  spawn-ipfs-node:
    description: "Init IPFS repo and spawn node in background"
    steps:
      - run:
          name: "Init IPFS repo"
          command: npm run init
      - run:
          name: "Run IPFS node"
          command: export IPFS_PATH=./.repos/upload && ipfs daemon
          background: true
      - run:
          name: "Waiting for the IPFS daemon"
          no_output_timeout: 60s
          command: |
            while (! ipfs id --api=/ip4/127.0.0.1/tcp/5002 2>/dev/null); do
              sleep 1
            done


jobs:
  check:
    parameters:
      cache:
        type: boolean
        default: true
    docker:
      - image: circleci/node:10
    steps:
      - checkout
      - when:
          condition: <<parameters.cache>>
          steps:
            - restore_cache:
                keys:
                  # when lock file changes, use increasingly general patterns to restore cache
                  - node-10-{{ .Branch }}-{{ checksum "package-lock.json" }}
                  - node-10-{{ .Branch }}-
                  - node-10-
      - install-deps
      - when:
          condition: <<parameters.cache>>
          steps:
            - save_cache:
                paths:
                  - ./node_modules
                key: node-10-{{ .Branch }}-{{ checksum "package-lock.json" }}
      - run:
          name: "Commit linting"
          command: |
            git config --global user.email "you@example.com"
            git config --global user.name "Your Name"
            npx tasegir commitlint --circleci
      - run:
          name: "Dependency check"
          command: npx tasegir dep-check
      - run:
          name: "Code linting"
          command: npx tasegir lint
      - run:
          name: "Types check"
          command: npx tasegir types-check


  # Run test
  tests:
    parameters:
      version:
        type: string
      cache:
        type: boolean
        default: true
    docker:
      - image: circleci/node:<< parameters.version >>
    environment:
      ALLOW_CONFIG_MUTATIONS: true
    steps:
      - checkout
      - when:
          condition: <<parameters.cache>>
          steps:
            - restore_cache:
                keys:
                  # when lock file changes, use increasingly general patterns to restore cache
                  - node-<< parameters.version >>-{{ .Branch }}-{{ checksum "package-lock.json" }}
                  - node-<< parameters.version >>-{{ .Branch }}-
                  - node-<< parameters.version >>-
      - install-deps
      - when:
          condition: <<parameters.cache>>
          steps:
            - save_cache:
                paths:
                  - ./node_modules
                key: node-<< parameters.version >>-{{ .Branch }}-{{ checksum "package-lock.json" }}
      - install-ipfs
      - spawn-ipfs-node
      - install-sqlite
      - run:
          name: "Unit tests"
          command: npx tasegir test --target node --files ./test/unit/*.spec.ts --files ./test/unit/**/*.spec.ts --files ./test/unit/**/**/*.spec.ts --reporter lcovonly -- --bail
      - run:
          name: "Integration tests"
          command: npx tasegir test --target node --files ./test/integration/**/*.spec.ts --files ./test/integration/**/**/*.spec.ts --reporter lcovonly -- --bail

workflows:
  test:
    jobs:
      - check
      - tests:
          version: '10'
          name: node-10
          requires:
            - check
      - tests:
          version: '12'
          name: node-12
          requires:
            - check
      - tests:
          version: '14'
          name: node-14
          requires:
            - check
